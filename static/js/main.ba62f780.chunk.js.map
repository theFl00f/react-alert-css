{"version":3,"sources":["context/Reducer.js","context/Store.jsx","views/components/Wrapper.jsx","dao/AlertDao.js","context/persistentContext.js","views/components/ReactDnD/constants.js","views/components/ReactDnD/useColorDrop.jsx","views/components/InlineEdit.jsx","views/components/AlertFrame/AlertButton/index.jsx","views/components/AlertFrame/AlertButton/AlertButtonBorder.jsx","views/components/AlertFrame/AlertBackground/index.jsx","views/components/AlertFrame/AlertBackground/AlertBackgroundBorder.jsx","views/components/ColorSwatch.jsx","views/components/AlertFrame/AlertFrameSwatch.jsx","views/components/AlertFrame/index.jsx","views/components/Form/index.jsx","views/components/Form/RangeInput.jsx","views/components/forms/CreateAlertForm.jsx","views/components/Button.jsx","views/components/Modal.jsx","views/components/ReactDnD/CustomColorDragLayer.jsx","views/components/ReactDnD/DraggableColor.jsx","views/components/SelectedPalette.jsx","views/pages/CreateAlert/AlertBox/ExportedCodeBlock.jsx","views/pages/CreateAlert/AlertBox/index.jsx","views/components/Form/RadioInput.jsx","views/components/Form/ColorInput.jsx","util/colorUtil.js","views/components/TinyColor.jsx","util/usePrevious.js","views/components/forms/constants.js","views/components/forms/PaletteForm.jsx","views/pages/CreateAlert/Palette/index.jsx","routes/createAlert.routes.js","views/pages/CreateAlert/CreateAlertNav.jsx","views/layouts/CreateAlertLayout.jsx","views/pages/CreateAlert/index.jsx","views/components/UserAlert/index.jsx","views/pages/UserAlerts/index.jsx","routes/routes.js","views/components/Footer.jsx","views/components/Nav.jsx","views/layouts/GlobalLayout.jsx","App.js","index.js"],"names":["Reducer","state","action","type","palette","payload","theme","alertBorderColor","alertBackgroundColor","buttonBorderColor","buttonBackgroundColor","textColor","buttonTextColor","message","buttonText","alertWidth","alertHeight","alertBorderRadius","alertBorderWidth","alertYPadding","alertXPadding","buttonYPadding","buttonXPadding","buttonBorderRadius","buttonBorderWidth","error","initialState","Context","createContext","Store","children","useReducer","dispatch","Provider","value","Wrapper","className","basePath","process","alertDao","axios","post","user","alertName","textValues","button","css","dimensions","get","ItemTypes","useColorDrop","initialColor","useState","color","setColor","useDrop","accept","drop","item","monitor","didDrop","collect","isOver","InlineEdit","text","saveText","onFocusOut","inputClassName","AlertButton","useContext","getComputedStyles","xPadding","styles","backgroundColor","borderRadius","width","padding","computedStyles","setComputedStyles","_isOver","useEffect","disabled","style","ref","AlertButtonBorder","AlertBackground","height","AlertBackgroundBorder","ColorSwatch","React","forwardRef","classes","displayName","AlertFrameSwatch","label","AlertFrame","Form","args","RangeInput","id","htmlFor","CreateAlertForm","inputClasses","min","max","defaultValue","onChange","e","target","step","Button","Modal","openButtonText","handlePublish","isOpen","setIsOpen","closeModal","ReactModal","setAppElement","onClick","onRequestClose","shouldCloseOnOverlayClick","overlayClassName","CustomColorDragLayer","memo","useDragLayer","getItem","itemType","getItemType","isDragging","initialOffset","getInitialSourceClientOffset","currentOffset","getSourceClientOffset","display","x","y","transform","WebkitTransform","getStyles","opacity","pointerEvents","DraggableColor","useDrag","drag","preview","getEmptyImage","captureDraggingState","SelectedPalette","location","useLocation","colors","URLSearchParams","search","split","map","basics","i","length","includes","push","checkHasColors","index","ExportedCodeBlock","title","code","highlightingClass","copied","setCopied","Prism","highlightAll","copyToClipboard","a","navigator","clipboard","writeText","setTimeout","console","log","buttonLabel","buttonClasses","getButtonClasses","aria-hidden","icon","faCopy","copiedClasses","getCopiedClasses","AlertBox","history","useHistory","addAlert","RadioInput","ColorInput","joinColors","array","slice","join","TinyColor","hasSetColorsRef","useRef","prevTheme","current","usePrevious","searchParams","useMemo","paletteUrl","setTheme","setPalette","colorParams","params","prevParams","newUrl","toString","replace","randomColor","tinycolor","random","generatePalette","useCallback","paletteType","analogous","monochromatic","splitcomplement","triad","tempColors","Array","toHexString","handlePaletteChange","event","newValue","prevValue","attributes","indexOf","newColors","preventDefault","colorOptions","name","PaletteForm","baseUrl","REACT_APP_DEPLOYED","newTheme","key","defaultChecked","to","Palette","routes","path","component","exact","CreateAlertNav","activeClassName","activeStyle","boxShadow","CreateAlertLayout","CreateAlert","redirectPath","UserAlert","border","buttonStyles","borderWidth","aria-disabled","UserAlerts","alerts","setAlerts","getAlerts","response","data","result","alert","_id","Footer","href","Nav","GlobalLayout","App","DndProvider","backend","HTML5Backend","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba62f780.chunk.js","sourcesContent":["const Reducer = (state, action) => {\n  switch (action.type) {\n    // overall palette selection\n    case \"SET_PALETTE\":\n      return {\n        ...state,\n        palette: action.payload,\n      };\n\n    case \"SET_THEME\":\n      return {\n        ...state,\n        theme: action.payload,\n      };\n    // alert colors\n    case \"SET_ALERT_BORDER_COLOR\":\n      return {\n        ...state,\n        alertBorderColor: action.payload,\n      };\n    case \"SET_ALERT_BACKGROUND_COLOR\":\n      return {\n        ...state,\n        alertBackgroundColor: action.payload,\n      };\n    case \"SET_BUTTON_BORDER_COLOR\":\n      return {\n        ...state,\n        buttonBorderColor: action.payload,\n      };\n    case \"SET_BUTTON_BACKGROUND_COLOR\":\n      return {\n        ...state,\n        buttonBackgroundColor: action.payload,\n      };\n    case \"SET_TEXT_COLOR\":\n      return {\n        ...state,\n        textColor: action.payload,\n      };\n    case \"SET_BUTTON_TEXT_COLOR\":\n      return {\n        ...state,\n        buttonTextColor: action.payload,\n      };\n\n    // text input\n    case \"SET_MESSAGE\":\n      return {\n        ...state,\n        message: action.payload,\n      };\n    case \"SET_BUTTON_TEXT\":\n      return {\n        ...state,\n        buttonText: action.payload,\n      };\n\n    // dimensions\n\n    case \"SET_ALERT_WIDTH\":\n      return {\n        ...state,\n        alertWidth: action.payload,\n      };\n    case \"SET_ALERT_HEIGHT\":\n      return {\n        ...state,\n        alertHeight: action.payload,\n      };\n    case \"SET_ALERT_BORDER_RADIUS\":\n      return {\n        ...state,\n        alertBorderRadius: action.payload,\n      };\n    case \"SET_ALERT_BORDER_WIDTH\":\n      return {\n        ...state,\n        alertBorderWidth: action.payload,\n      };\n    case \"SET_ALERT_Y_PADDING\":\n      return {\n        ...state,\n        alertYPadding: action.payload,\n      };\n    case \"SET_ALERT_X_PADDING\":\n      return {\n        ...state,\n        alertXPadding: action.payload,\n      };\n\n    case \"SET_BUTTON_Y_PADDING\":\n      return {\n        ...state,\n        buttonYPadding: action.payload,\n      };\n    case \"SET_BUTTON_X_PADDING\":\n      return {\n        ...state,\n        buttonXPadding: action.payload,\n      };\n    case \"SET_BUTTON_BORDER_RADIUS\":\n      return {\n        ...state,\n        buttonBorderRadius: action.payload,\n      };\n    case \"SET_BUTTON_BORDER_WIDTH\":\n      return {\n        ...state,\n        buttonBorderWidth: action.payload,\n      };\n    case \"SET_ERROR\":\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import React, { createContext, useReducer } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Reducer from \"./Reducer\";\n\nconst initialState = {\n  palette: [],\n  theme: \"analogous\",\n  alertBorderColor: \"\",\n  alertBackgroundColor: \"\",\n  buttonBorderColor: \"\",\n  buttonBackgroundColor: \"\",\n  textColor: \"\",\n  buttonTextColor: \"\",\n  message: \"\",\n  buttonText: \"Close\",\n  alertWidth: 24,\n  alertHeight: 14,\n  alertBorderRadius: 0,\n  alertBorderWidth: 0.5,\n  alertXPadding: 1,\n  alertYPadding: 1,\n  buttonXPadding: 4,\n  buttonYPadding: 0.4,\n  buttonBorderRadius: 0,\n  buttonBorderWidth: 0.5,\n  error: null,\n};\n\nconst Store = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return (\n    <Context.Provider value={[state, dispatch]}>{children}</Context.Provider>\n  );\n};\n\nexport const Context = createContext(initialState);\nexport default Store;\n\nStore.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Wrapper = ({ children }) => {\n  return <div className=\"w-11/12 max-w-6xl mx-auto\">{children}</div>;\n};\n\nWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import axios from \"axios\";\n\nconst basePath = process.env.REACT_APP_BASE_URL || \"\";\n\nexport default class AlertDao {\n  addAlert({\n    alertBorderColor,\n    alertBackgroundColor,\n    buttonBorderColor,\n    buttonBackgroundColor,\n    textColor,\n    buttonTextColor,\n    message,\n    buttonText,\n    alertWidth,\n    alertHeight,\n    alertBorderRadius,\n    alertBorderWidth,\n    alertXPadding,\n    alertYPadding,\n    buttonXPadding,\n    buttonYPadding,\n    buttonBorderRadius,\n    buttonBorderWidth,\n  }) {\n    return axios.post(`${basePath}/api/alert`, {\n      user: \"Anonymous\",\n      alertName: \"Untitled\",\n      textValues: {\n        message,\n        button: buttonText,\n      },\n      css: {\n        alertBorderColor,\n        alertBackgroundColor,\n        buttonBorderColor,\n        buttonBackgroundColor,\n        textColor,\n        buttonTextColor,\n      },\n      dimensions: {\n        alertWidth,\n        alertHeight,\n        alertBorderRadius,\n        alertBorderWidth,\n        alertXPadding,\n        alertYPadding,\n        buttonXPadding,\n        buttonYPadding,\n        buttonBorderRadius,\n        buttonBorderWidth,\n      },\n    });\n  }\n\n  getAlerts() {\n    return axios.get(`${basePath}/api/alerts`);\n  }\n}\n","import AlertDao from \"../dao/AlertDao\";\n\nconst alertDao = new AlertDao();\n\nexport { alertDao };\n","export const ItemTypes = {\n  COLORS: \"colors\",\n};\n","import { useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"./constants\";\n\nexport const useColorDrop = (initialColor) => {\n  const [color, setColor] = useState(initialColor);\n\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: ItemTypes.COLORS,\n    drop: (item, monitor) => {\n      const didDrop = monitor.didDrop();\n      if (didDrop) {\n        return;\n      }\n      setColor(item.color);\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }));\n  return { isOver, drop, color };\n};\n","import React from \"react\";\nimport EditableLabel from \"react-inline-editing\";\nimport PropTypes from \"prop-types\";\n\nexport const InlineEdit = ({ text, saveText }) => {\n  return (\n    <>\n      <EditableLabel\n        text={text || \"Click to edit\"}\n        onFocusOut={saveText}\n        inputClassName=\"bg-transparent border border-indigo-300 border-solid max-w-full px-1\"\n      />\n    </>\n  );\n};\n\nInlineEdit.propTypes = {\n  text: PropTypes.string,\n  saveText: PropTypes.func.isRequired,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../../../../context/Store\";\nimport { useColorDrop } from \"../../ReactDnD/useColorDrop\";\nimport PropTypes from \"prop-types\";\n\nexport const AlertButton = ({ children }) => {\n  const [state, dispatch] = useContext(Context);\n  const getComputedStyles = (xPadding) => {\n    const styles = {\n      backgroundColor: state.buttonBackgroundColor,\n      color: state.buttonTextColor,\n      borderRadius: `${state.buttonBorderRadius}rem`,\n    };\n    if (xPadding == 15) {\n      const style = {\n        ...styles,\n        width: \"100%\",\n        padding: `${state.buttonYPadding}rem 0`,\n      };\n      return style;\n    }\n    const style = {\n      ...styles,\n      padding: `${state.buttonYPadding}rem ${xPadding}rem`,\n    };\n    return style;\n  };\n  const [computedStyles, setComputedStyles] = useState(\n    getComputedStyles(state.buttonXPadding)\n  );\n  const { _isOver, color, drop } = useColorDrop(\n    state.buttonBackgroundColor || \"#1f1f1f\"\n  );\n\n  useEffect(() => {\n    dispatch({ type: \"SET_BUTTON_BACKGROUND_COLOR\", payload: color });\n  }, [color, dispatch]);\n\n  useEffect(() => {\n    setComputedStyles(getComputedStyles(state.buttonXPadding));\n  }, [\n    state.buttonXPadding,\n    state.buttonYPadding,\n    state.buttonBackgroundColor,\n    state.buttonTextColor,\n    state.buttonBorderRadius,\n  ]);\n\n  return (\n    <button\n      className=\"max-w-full cursor-default\"\n      disabled\n      style={computedStyles}\n      ref={drop}\n    >\n      {children}\n    </button>\n  );\n};\n\nAlertButton.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { AlertButton } from \".\";\nimport { Context } from \"../../../../context/Store\";\nimport { InlineEdit } from \"../../InlineEdit\";\nimport { useColorDrop } from \"../../ReactDnD/useColorDrop\";\n\nexport const AlertButtonBorder = () => {\n  const [state, dispatch] = useContext(Context);\n  const getComputedStyles = (xPadding) => {\n    const styles = {\n      backgroundColor: state.buttonBorderColor,\n      padding: `${state.buttonBorderWidth}rem`,\n      borderRadius: `${state.buttonBorderRadius}rem`,\n    };\n    if (xPadding == 15) {\n      return {\n        ...styles,\n        width: \"100%\",\n      };\n    }\n    return {\n      ...styles,\n    };\n  };\n  const [computedStyles, setComputedStyles] = useState(\n    getComputedStyles(state.buttonXPadding)\n  );\n  const { _isOver, color, drop } = useColorDrop(\n    state.buttonBorderColor || \"#000000\"\n  );\n\n  const saveText = (value) => {\n    dispatch({ type: \"SET_BUTTON_TEXT\", payload: value });\n  };\n\n  useEffect(() => {\n    dispatch({ type: \"SET_BUTTON_BORDER_COLOR\", payload: color });\n  }, [color, dispatch]);\n\n  useEffect(() => {\n    setComputedStyles(getComputedStyles(state.buttonXPadding));\n  }, [\n    state.buttonXPadding,\n    state.buttonBorderColor,\n    state.buttonBorderWidth,\n    state.buttonBorderRadius,\n  ]);\n\n  useEffect;\n\n  return (\n    <div className=\"max-w-full\" style={computedStyles} ref={drop}>\n      <AlertButton>\n        <InlineEdit text={state.buttonText} saveText={saveText} />\n      </AlertButton>\n    </div>\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { Context } from \"../../../../context/Store\";\nimport { InlineEdit } from \"../../InlineEdit\";\nimport { useColorDrop } from \"../../ReactDnD/useColorDrop\";\nimport { AlertButtonBorder } from \"../AlertButton/AlertButtonBorder\";\n\nexport const AlertBackground = () => {\n  const [state, dispatch] = useContext(Context);\n  const { _isOver, color, drop } = useColorDrop(\n    state.alertBackgroundColor || \"#4f4f4f\"\n  );\n\n  const saveText = (value) => {\n    dispatch({ type: \"SET_MESSAGE\", payload: value });\n  };\n\n  useEffect(() => {\n    dispatch({ type: \"SET_ALERT_BACKGROUND_COLOR\", payload: color });\n  }, [color, dispatch]);\n\n  return (\n    <div\n      style={{\n        backgroundColor: state.alertBackgroundColor,\n        width: `${state.alertWidth}rem`,\n        height: `${state.alertHeight}rem`,\n        borderRadius: `${state.alertBorderRadius - state.alertBorderWidth}rem`,\n        padding: `${state.alertYPadding}rem ${state.alertXPadding}rem`,\n      }}\n      className=\"flex flex-col items-center justify-between\"\n      ref={drop}\n    >\n      <div style={{ color: state.textColor }}>\n        <InlineEdit text={state.message} saveText={saveText} />\n      </div>\n      <AlertButtonBorder />\n    </div>\n  );\n};\n","import { AlertBackground } from \".\";\nimport React, { useContext, useEffect } from \"react\";\nimport { useColorDrop } from \"../../ReactDnD/useColorDrop\";\nimport { Context } from \"../../../../context/Store\";\n\nexport const AlertBackgroundBorder = () => {\n  const [state, dispatch] = useContext(Context);\n  const { _isOver, color, drop } = useColorDrop(\n    state.alertBorderColor || \"#ffffff\"\n  );\n\n  useEffect(() => {\n    dispatch({ type: \"SET_ALERT_BORDER_COLOR\", payload: color });\n  }, [color, dispatch]);\n\n  return (\n    <div\n      className=\"p-4 outline-white\"\n      style={{\n        backgroundColor: state.alertBorderColor,\n        padding: `${state.alertBorderWidth}rem`,\n        borderRadius: `${state.alertBorderRadius}rem`,\n      }}\n      ref={drop}\n    >\n      <AlertBackground />\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const ColorSwatch = React.forwardRef(({ style, className }, ref) => {\n  let classes = \"h-12 w-12\";\n  if (className) classes += \" \" + className;\n  return <div className={classes} ref={ref} style={style}></div>;\n});\n\nColorSwatch.propTypes = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nColorSwatch.displayName = \"ColorSwatch\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ColorSwatch } from \"../ColorSwatch\";\n\nexport const AlertFrameSwatch = React.forwardRef(({ label, color }, ref) => {\n  return (\n    <div className=\"flex flex-col items-start\">\n      <p className=\"prose prose-sm text-white mb-0\">{label}</p>\n      <ColorSwatch\n        className=\"rounded\"\n        ref={ref}\n        style={{ backgroundColor: color }}\n      />\n    </div>\n  );\n});\n\nAlertFrameSwatch.propTypes = {\n  label: PropTypes.string.isRequired,\n\n  color: PropTypes.string,\n};\n\nAlertFrameSwatch.displayName = \"AlertFrameSwatch\";\n","import React, { useContext, useEffect } from \"react\";\nimport { Context } from \"../../../context/Store\";\nimport { useColorDrop } from \"../ReactDnD/useColorDrop\";\nimport { AlertBackgroundBorder } from \"./AlertBackground/AlertBackgroundBorder\";\nimport { AlertFrameSwatch } from \"./AlertFrameSwatch\";\n\nexport const AlertFrame = () => {\n  const [state, dispatch] = useContext(Context);\n\n  const textColor = useColorDrop(state.textColor || \"#ffffff\");\n  const buttonTextColor = useColorDrop(state.buttonTextColor || \"#ffffff\");\n\n  useEffect(() => {\n    dispatch({ type: \"SET_TEXT_COLOR\", payload: textColor.color });\n  }, [dispatch, textColor.color]);\n\n  useEffect(() => {\n    dispatch({ type: \"SET_BUTTON_TEXT_COLOR\", payload: buttonTextColor.color });\n  }, [dispatch, buttonTextColor.color]);\n\n  return (\n    <div className=\" bg-rac-purple py-4 gap-x-8 rounded-r rounded-tl border-t-2 border-rac-yellow flex justify-center\">\n      <AlertBackgroundBorder />\n      <article className=\"flex flex-col items-start\">\n        <AlertFrameSwatch\n          label=\"Text color\"\n          ref={textColor.drop}\n          color={state.textColor}\n        />\n        <AlertFrameSwatch\n          label=\"Button text color\"\n          ref={buttonTextColor.drop}\n          color={state.buttonTextColor}\n        />\n      </article>\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Form = ({ className, children, ...args }) => {\n  let classes = \"bg-white text-black rounded py-4 px-6\";\n\n  if (className) {\n    classes += \" \" + className;\n  }\n\n  return (\n    <form className={classes} {...args}>\n      {children}\n    </form>\n  );\n};\n\nForm.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const RangeInput = ({ label, className, id, ...args }) => {\n  let classes = \"prose prose-sm\";\n  if (className) {\n    classes += \" \" + className;\n  }\n  return (\n    <div className={classes}>\n      <label htmlFor={id}>{label}</label>\n      <input id={id} type=\"range\" {...args} />\n    </div>\n  );\n};\n\nRangeInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../../context/Store\";\nimport { Form } from \"../Form\";\nimport { RangeInput } from \"../Form/RangeInput\";\n\nexport const CreateAlertForm = () => {\n  const [state, dispatch] = useContext(Context);\n\n  const handleAlertWidthChange = (e) => {\n    dispatch({ type: \"SET_ALERT_WIDTH\", payload: e.target.value });\n  };\n\n  const handleAlertHeightChange = (e) => {\n    dispatch({ type: \"SET_ALERT_HEIGHT\", payload: e.target.value });\n  };\n\n  const handleAlertBorderRadiusChange = (e) => {\n    dispatch({ type: \"SET_ALERT_BORDER_RADIUS\", payload: e.target.value });\n  };\n\n  const handleAlertBorderWidthChange = (e) => {\n    dispatch({ type: \"SET_ALERT_BORDER_WIDTH\", payload: e.target.value });\n  };\n\n  const handleAlertYPaddingChange = (e) => {\n    dispatch({ type: \"SET_ALERT_Y_PADDING\", payload: e.target.value });\n  };\n\n  const handleAlertXPaddingChange = (e) => {\n    dispatch({ type: \"SET_ALERT_X_PADDING\", payload: e.target.value });\n  };\n\n  const handleButtonYPaddingChange = (e) => {\n    dispatch({ type: \"SET_BUTTON_Y_PADDING\", payload: e.target.value });\n  };\n\n  const handleButtonXPaddingChange = (e) => {\n    dispatch({ type: \"SET_BUTTON_X_PADDING\", payload: e.target.value });\n  };\n\n  const handleButtonBorderRadiusChange = (e) => {\n    dispatch({ type: \"SET_BUTTON_BORDER_RADIUS\", payload: e.target.value });\n  };\n\n  const handleButtonBorderWidthChange = (e) => {\n    dispatch({ type: \"SET_BUTTON_BORDER_WIDTH\", payload: e.target.value });\n  };\n\n  const inputClasses = \"grid grid-cols-2\";\n\n  return (\n    <Form className=\"grid grid-cols-2 gap-y-4 gap-x-12\">\n      <RangeInput\n        id=\"alertWidth\"\n        className={inputClasses}\n        label=\"Alert width\"\n        min={8}\n        max={36}\n        defaultValue={state.alertWidth}\n        onChange={handleAlertWidthChange}\n      />\n      <RangeInput\n        id=\"alertHeight\"\n        className={inputClasses}\n        label=\"Alert height\"\n        min={7}\n        max={20}\n        defaultValue={state.alertHeight}\n        onChange={handleAlertHeightChange}\n      />\n      <RangeInput\n        id=\"alertBorderRadius\"\n        className={inputClasses}\n        label=\"Alert border radius\"\n        min={0}\n        max={15}\n        step={0.5}\n        defaultValue={state.alertBorderRadius}\n        onChange={handleAlertBorderRadiusChange}\n      />\n      <RangeInput\n        id=\"alertBorderWidth\"\n        className={inputClasses}\n        label=\"Alert border width\"\n        min={0}\n        max={2}\n        step={0.1}\n        defaultValue={state.alertBorderWidth}\n        onChange={handleAlertBorderWidthChange}\n      />\n      <RangeInput\n        id=\"alertYPadding\"\n        className={inputClasses}\n        label=\"Alert Y padding\"\n        min={0}\n        max={5}\n        step={0.5}\n        defaultValue={state.alertYPadding}\n        onChange={handleAlertYPaddingChange}\n      />\n      <RangeInput\n        id=\"alertXPadding\"\n        className={inputClasses}\n        label=\"Alert X padding\"\n        min={0}\n        max={15}\n        step={0.5}\n        defaultValue={state.alertXPadding}\n        onChange={handleAlertXPaddingChange}\n      />\n\n      <RangeInput\n        id=\"buttonYPadding\"\n        className={inputClasses}\n        label=\"Button Y padding\"\n        min={0}\n        max={2.5}\n        step={0.2}\n        defaultValue={state.buttonYPadding}\n        onChange={handleButtonYPaddingChange}\n      />\n      <RangeInput\n        id=\"buttonXPadding\"\n        className={inputClasses}\n        label=\"Button X padding\"\n        min={0}\n        max={15}\n        defaultValue={state.buttonXPadding}\n        onChange={handleButtonXPaddingChange}\n      />\n      <RangeInput\n        id=\"buttonBorderRadius\"\n        className={inputClasses}\n        label=\"Button border radius\"\n        min={0}\n        max={10}\n        step={0.5}\n        defaultValue={state.buttonBorderRadius}\n        onChange={handleButtonBorderRadiusChange}\n      />\n      <RangeInput\n        id=\"buttonBorderWidth\"\n        className={inputClasses}\n        label=\"Button border width\"\n        min={0}\n        max={2}\n        step={0.1}\n        defaultValue={state.buttonBorderWidth}\n        onChange={handleButtonBorderWidthChange}\n      />\n    </Form>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Button = ({ children, ...args }) => {\n  return (\n    <button\n      className=\"bg-rac-light-peach px-6 rounded py-1 font-medium text-black hover:bg-rac-peach focus:bg-rac-peach transition-colors rac-transition text-opacity-90 hover:text-opacity-100\"\n      {...args}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { useState } from \"react\";\nimport ReactModal from \"react-modal\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"./Button\";\n\nexport const Modal = ({ children, openButtonText, handlePublish }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleClick = () => {\n    closeModal();\n    handlePublish();\n  };\n\n  ReactModal.setAppElement(\"#root\");\n\n  return (\n    <>\n      <div className=\"mb-2\">\n        <Button onClick={openModal}>{openButtonText}</Button>\n      </div>\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={closeModal}\n        shouldCloseOnOverlayClick={true}\n        overlayClassName=\"fixed inset-0 bg-black bg-opacity-50\"\n      >\n        {handlePublish && (\n          <div className=\"flex justify-end\">\n            <Button onClick={handleClick}>Publish</Button>\n          </div>\n        )}\n        {children}\n      </ReactModal>\n    </>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.element.isRequired,\n  openButtonText: PropTypes.string.isRequired,\n  handlePublish: PropTypes.func.isRequired,\n};\n","import React, { memo } from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport { ColorSwatch } from \"../ColorSwatch\";\nimport { ItemTypes } from \"./constants\";\n\nexport const CustomColorDragLayer = memo(function CustomColorDragLayer() {\n  const { itemType, isDragging, item, initialOffset, currentOffset } =\n    useDragLayer((monitor) => {\n      return {\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        isDragging: monitor.isDragging(),\n        initialOffset: monitor.getInitialSourceClientOffset(),\n        currentOffset: monitor.getSourceClientOffset(),\n      };\n    });\n\n  const getStyles = (initialOffset, currentOffset) => {\n    if (!initialOffset || !currentOffset) {\n      return {\n        display: \"none\",\n      };\n    }\n    const { x, y } = currentOffset;\n    const transform = `translate(calc(${x}px - 3rem), ${y}px) rotate(5deg)`;\n    return {\n      transform,\n      WebkitTransform: transform,\n    };\n  };\n\n  const styles = getStyles(initialOffset, currentOffset);\n\n  if (isDragging && itemType === ItemTypes.COLORS)\n    return (\n      <ColorSwatch\n        style={{\n          ...styles,\n          backgroundColor: item.color,\n          opacity: 0.7,\n          pointerEvents: \"none\",\n        }}\n        className=\"cursor-move rounded fixed top-0 z-50\"\n      />\n    );\n  return null;\n});\n\nCustomColorDragLayer.displayName = \"CustomColorDragLayer\";\n","import React, { memo, useEffect } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { ColorSwatch } from \"../ColorSwatch\";\nimport { ItemTypes } from \"../ReactDnD/constants\";\nimport PropTypes from \"prop-types\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\n\nexport const DraggableColor = memo(function DraggableColor({ color }) {\n  const [{ isDragging }, drag, preview] = useDrag(\n    () => ({\n      type: ItemTypes.COLORS,\n      item: { color },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [color]\n  );\n\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, []);\n\n  return (\n    <ColorSwatch\n      ref={drag}\n      style={{ backgroundColor: color, opacity: isDragging ? 0.7 : 1 }}\n      className=\"cursor-move\"\n    />\n  );\n});\n\nDraggableColor.propTypes = {\n  color: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { CustomColorDragLayer } from \"./ReactDnD/CustomColorDragLayer\";\nimport { DraggableColor } from \"./ReactDnD/DraggableColor\";\n\nexport const SelectedPalette = () => {\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n\n  const colors = params\n    .get(\"colors\")\n    .split(\"-\")\n    .map((color) => `#${color}`);\n\n  const checkHasColors = (basics) => {\n    for (let i = 0; i < basics.length; i++) {\n      if (!colors.includes(basics[i])) {\n        colors.push(basics[i]);\n      }\n    }\n  };\n\n  checkHasColors([\"#ffffff\", \"#000000\"]);\n\n  return (\n    <section className=\"p-2 bg-rac-purple rounded-b pt-1 mb-2\">\n      <div className=\"flex rounded overflow-hidden\">\n        {colors &&\n          colors.map((color, index) => (\n            <DraggableColor key={`${color}-${index}`} color={color} />\n          ))}\n        <CustomColorDragLayer />\n      </div>\n    </section>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from \"@fortawesome/free-solid-svg-icons\";\nimport Prism from \"prismjs\";\nimport \"../../../components/prism.css\";\n\nexport const ExportedCodeBlock = ({ title, code, highlightingClass }) => {\n  const [copied, setCopied] = useState(false);\n  useEffect(() => {\n    Prism.highlightAll();\n  }, []);\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(code);\n      setCopied(true);\n      setTimeout(() => {\n        setCopied(false);\n      }, 2500);\n    } catch (e) {\n      console.log({ e });\n    }\n  };\n\n  const getCopiedClasses = () => {\n    let copiedClasses = \"transition-opacity rac-transition \";\n    copied\n      ? (copiedClasses += \"opacity-100 visible\")\n      : (copiedClasses += \"opacity-0 invisible\");\n    return copiedClasses;\n  };\n\n  const getButtonClasses = () => {\n    let buttonClasses =\n      \"text-base px-2 hover:text-rac-light-purple transition-colors rac-transition \";\n    copied\n      ? (buttonClasses += \"text-rac-light-purple\")\n      : (buttonClasses += \"text-rac-purple\");\n    return buttonClasses;\n  };\n\n  const buttonLabel = `Copy ${title} to clipboard`;\n\n  return (\n    <article className=\"flex flex-col\">\n      <span className=\"prose prose-sm flex items-baseline gap-2\">\n        <h2>{title}</h2>\n        <button onClick={copyToClipboard} className={getButtonClasses()}>\n          <FontAwesomeIcon\n            aria-hidden={true}\n            title={buttonLabel}\n            icon={faCopy}\n          />\n          <span className=\"sr-only\">{buttonLabel}</span>\n        </button>\n        <p className={getCopiedClasses()}>Copied!</p>\n      </span>\n      <pre>\n        <code className={highlightingClass || \"\"}>{code}</code>\n      </pre>\n    </article>\n  );\n};\n\nExportedCodeBlock.propTypes = {\n  title: PropTypes.string.isRequired,\n  code: PropTypes.string.isRequired,\n  highlightingClass: PropTypes.string,\n};\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { alertDao } from \"../../../../context/persistentContext\";\nimport { Context } from \"../../../../context/Store\";\nimport { AlertFrame } from \"../../../components/AlertFrame\";\nimport { CreateAlertForm } from \"../../../components/forms/CreateAlertForm\";\nimport { Modal } from \"../../../components/Modal\";\nimport { SelectedPalette } from \"../../../components/SelectedPalette\";\nimport { ExportedCodeBlock } from \"./ExportedCodeBlock\";\n\nconst AlertBox = () => {\n  const [state] = useContext(Context);\n  const history = useHistory();\n\n  const addAlert = ({\n    alertBorderColor,\n    alertBackgroundColor,\n    buttonBorderColor,\n    buttonBackgroundColor,\n    textColor,\n    buttonTextColor,\n    message,\n    buttonText,\n    alertWidth,\n    alertHeight,\n    alertBorderRadius,\n    alertBorderWidth,\n    alertXPadding,\n    alertYPadding,\n    buttonXPadding,\n    buttonYPadding,\n    buttonBorderRadius,\n    buttonBorderWidth,\n  }) => {\n    return alertDao.addAlert({\n      alertBorderColor,\n      alertBackgroundColor,\n      buttonBorderColor,\n      buttonBackgroundColor,\n      textColor,\n      buttonTextColor,\n      message,\n      buttonText,\n      alertWidth,\n      alertHeight,\n      alertBorderRadius,\n      alertBorderWidth,\n      alertXPadding,\n      alertYPadding,\n      buttonXPadding,\n      buttonYPadding,\n      buttonBorderRadius,\n      buttonBorderWidth,\n    });\n  };\n\n  const handlePublish = async () => {\n    //send state to DB\n    if (state.error) {\n      throw state.error;\n    }\n    try {\n      const response = await addAlert(state);\n      if (response) {\n        history.push(\"/alerts\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <>\n      <AlertFrame />\n      <div className=\"flex justify-between items-end\">\n        <SelectedPalette />\n        <Modal handlePublish={handlePublish} openButtonText=\"Export to code\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <ExportedCodeBlock\n              title=\"CSS\"\n              highlightingClass=\"language-css\"\n              code={`html {\n  font-size: 62.5%;\n}\n\nbody {\n  font-size: 1.4rem;\n}\n              \n.react-alert {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: ${state.alertWidth}rem;\n  height: ${state.alertHeight}rem;\n  background-color: ${state.alertBackgroundColor};\n  border: ${state.alertBorderWidth}rem solid ${state.alertBorderColor};\n  border-radius: ${state.alertBorderRadius}rem;${\n                state.message &&\n                `\n  color: ${state.textColor};`\n              }\n  ${\n    state.alertXPadding == state.alertYPadding\n      ? `padding: ${state.alertYPadding}rem;`\n      : `padding: ${state.alertYPadding}rem ${state.alertXPadding}rem;`\n  }\n}\n\n.react-alert button {\n  margin-top: auto;\n  background-color: ${state.buttonBackgroundColor};\n  border: ${state.buttonBorderWidth}rem solid ${state.buttonBorderColor};\n  border-radius: ${state.buttonBorderRadius}rem;\n  color: ${state.buttonTextColor};\n  ${\n    state.buttonXPadding == 15\n      ? `padding: ${state.buttonYPadding}rem 0;\n  width: 100%;`\n      : `padding: ${state.buttonYPadding}rem ${state.buttonXPadding}rem;`\n  }\n}\n`}\n            />\n            <ExportedCodeBlock\n              title=\"HTML\"\n              highlightingClass=\"language-html\"\n              code={`<div className=\"react-alert\">${\n                state.message &&\n                `\n  <p>${state.message}</p>`\n              }\n  <button>${state.buttonText}</button>\n</div>`}\n            />\n          </div>\n        </Modal>\n      </div>\n      <CreateAlertForm />\n    </>\n  );\n};\n\nexport default AlertBox;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Context } from \"../../../context/Store\";\n\nexport const RadioInput = ({ label, id, ...args }) => {\n  const [state] = useContext(Context);\n  let classes =\n    \"flex flex-col items-center prose prose-sm rounded border-2 border-rac-green\";\n  if (state.theme === args.value) {\n    classes += \" bg-rac-green font-medium\";\n  }\n  return (\n    <div className={classes}>\n      <input className=\"hidden\" id={id} type=\"radio\" {...args} />\n      <label className=\"cursor-pointer w-full text-center py-0.5\" htmlFor={id}>\n        {label}\n      </label>\n    </div>\n  );\n};\n\nRadioInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const ColorInput = ({ label, ...args }) => {\n  return (\n    <label className=\"flex flex-col md:flex-row\">\n      {label || args.value}\n      <input type=\"color\" {...args} />\n    </label>\n  );\n};\n\nColorInput.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n","export const splitColors = (string) => {\n  return string.split(\"-\").map((color) => `#${color}`);\n};\n\nexport const joinColors = (array) => {\n  return array.map((color) => color.slice(1)).join(\"-\");\n};\n","import React, {\n  Fragment,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport tinycolor from \"tinycolor2\";\nimport { useHistory } from \"react-router-dom\";\nimport { ColorInput } from \"./Form/ColorInput\";\nimport { joinColors, splitColors } from \"../../util/colorUtil\";\nimport { Context } from \"../../context/Store\";\nimport { usePrevious } from \"../../util/usePrevious\";\nimport { Button } from \"./Button\";\n\nexport const TinyColor = () => {\n  const history = useHistory();\n  const [state, dispatch] = useContext(Context);\n\n  const hasSetColorsRef = useRef(false);\n  const prevTheme = usePrevious(state.theme);\n\n  const searchParams = useMemo(\n    () => new URLSearchParams(history.location.search),\n    [history.location.search]\n  );\n\n  const paletteUrl = searchParams.get(\"colors\");\n\n  const setTheme = (theme) => {\n    dispatch({ type: \"SET_THEME\", payload: theme });\n  };\n\n  const setPalette = (colors) => {\n    dispatch({ type: \"SET_PALETTE\", payload: colors });\n\n    const colorParams = joinColors(colors);\n\n    const params = new URLSearchParams({\n      colors: colorParams,\n    });\n\n    const prevParams = searchParams;\n    const newUrl = `?${params.toString()}`;\n\n    if (!params.get(\"colors\")) {\n      return history.replace(newUrl);\n    }\n\n    if (params.get(\"colors\") !== prevParams.get(\"colors\")) {\n      return history.push(newUrl);\n    }\n  };\n\n  const randomColor = () => {\n    return tinycolor.random();\n  };\n\n  const generatePalette = useCallback((paletteType) => {\n    let color;\n    switch (paletteType) {\n      case \"analogous\": {\n        color = randomColor().analogous();\n        setTheme(\"analogous\");\n        break;\n      }\n      case \"monochrome\": {\n        color = randomColor().monochromatic();\n        setTheme(\"monochrome\");\n        break;\n      }\n      case \"split\": {\n        color = randomColor().splitcomplement();\n        setTheme(\"split\");\n        break;\n      }\n      case \"triad\": {\n        color = randomColor().triad();\n        setTheme(\"triad\");\n        break;\n      }\n      default: {\n        const tempColors = new Array(6);\n        for (let i = 0; i < tempColors.length; i++) {\n          tempColors[i] = randomColor();\n        }\n        color = tempColors;\n        setTheme(\"random\");\n      }\n    }\n    return color.map((color) => color.toHexString());\n  });\n\n  const handlePaletteChange = (event) => {\n    const newValue = event.target.value;\n    const prevValue = event.target.attributes.value.value;\n    const index = state.palette.indexOf(prevValue);\n    const newColors = [...state.palette];\n    newColors[index] = newValue;\n    return setPalette(newColors);\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    return setPalette(generatePalette(state.theme));\n  };\n\n  useEffect(() => {\n    // on paletteUrl change, set colors from url\n    hasSetColorsRef.current = false;\n    if (paletteUrl) {\n      const colors = splitColors(paletteUrl);\n      setPalette(colors);\n      hasSetColorsRef.current = true;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [paletteUrl]);\n\n  useEffect(() => {\n    // on theme change, generate and set new palette\n    if (!hasSetColorsRef.current || (prevTheme && state.theme !== prevTheme)) {\n      setPalette(generatePalette(state.theme));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.theme]);\n\n  return (\n    <>\n      {state.palette &&\n        state.palette.map((color, index) => {\n          return (\n            <Fragment key={index}>\n              <ColorInput\n                value={color}\n                label={color}\n                onChange={handlePaletteChange}\n              />\n            </Fragment>\n          );\n        })}\n      <div className=\"col-span-3 md:col-span-6 flex items-center justify-center\">\n        <Button onClick={handleClick}>Generate</Button>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useRef } from \"react\";\n\nexport const usePrevious = (value) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n","export const colorOptions = [\n  {\n    label: \"Analogous\",\n    value: \"analogous\",\n    id: \"analogous\",\n    name: \"colorSelection\",\n  },\n  {\n    label: \"Monochrome\",\n    value: \"monochrome\",\n    id: \"monochrome\",\n    name: \"colorSelection\",\n  },\n  {\n    label: \"Split\",\n    value: \"split\",\n    id: \"split\",\n    name: \"colorSelection\",\n  },\n  {\n    label: \"Triad\",\n    value: \"triad\",\n    id: \"triad\",\n    name: \"colorSelection\",\n  },\n  {\n    label: \"Random\",\n    value: \"random\",\n    id: \"random\",\n    name: \"colorSelection\",\n  },\n];\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../../context/Store\";\nimport { Button } from \"../Button\";\nimport { Form } from \"../Form\";\nimport { RadioInput } from \"../Form/RadioInput\";\nimport { TinyColor } from \"../TinyColor\";\nimport { colorOptions } from \"./constants\";\n\nexport const PaletteForm = () => {\n  const history = useHistory();\n  const [state, dispatch] = useContext(Context);\n  const baseUrl = process.env.REACT_APP_DEPLOYED || \"\";\n\n  const handleChange = (event) => {\n    const newTheme = event.target.value;\n    const prevTheme = state.theme;\n\n    if (prevTheme !== newTheme) {\n      dispatch({ type: \"SET_THEME\", payload: newTheme });\n    }\n  };\n\n  return (\n    <Form className=\"py-4 flex flex-col gap-6\">\n      <div\n        className=\"grid grid-cols-2 sm:grid-cols-5 gap-y-2 gap-x-4 sm:gap-2\"\n        onChange={handleChange}\n      >\n        {colorOptions.map((color, index) => (\n          <RadioInput\n            {...color}\n            key={index}\n            defaultChecked={color.value === state.theme}\n          />\n        ))}\n      </div>\n      <div className=\"grid grid-cols-3 md:grid-cols-6 place-items-center\">\n        <TinyColor />\n      </div>\n      <div>\n        <Button>\n          <Link to={`${baseUrl}/create/edit-alert${history.location.search}`}>\n            Next\n          </Link>\n        </Button>\n      </div>\n    </Form>\n  );\n};\n","import React from \"react\";\nimport { PaletteForm } from \"../../../components/forms/PaletteForm\";\n\nconst Palette = () => {\n  return (\n    <div className=\"py-4 px-6 bg-rac-purple rounded rounded-tl-none border-t-2 border-rac-yellow\">\n      <PaletteForm />\n    </div>\n  );\n};\n\nexport default Palette;\n","import AlertBox from \"../views/pages/CreateAlert/AlertBox\";\nimport Palette from \"../views/pages/CreateAlert/Palette\";\n\nconst baseUrl = process.env.REACT_APP_DEPLOYED || \"\";\n\nconst routes = [\n  {\n    path: `${baseUrl}/create/palette`,\n    component: Palette,\n    label: \"Edit Palette\",\n    exact: true,\n  },\n  {\n    path: `${baseUrl}/create/edit-alert`,\n    component: AlertBox,\n    label: \"Customize Alert\",\n    exact: true,\n  },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport routes from \"../../../routes/createAlert.routes\";\n\nexport const CreateAlertNav = () => {\n  const location = useLocation();\n\n  return (\n    <nav>\n      <ul className=\"flex\">\n        {routes.map(({ path, label }) => (\n          <li key={label}>\n            <NavLink\n              className=\"px-2 mr-2 block border-t-2 border-transparent hover:text-rac-yellow focus:text-rac-yellow\"\n              activeClassName=\"bg-rac-purple rounded-t border-rac-yellow font-medium\"\n              activeStyle={{ boxShadow: \"0 .5rem #585bd1\" }}\n              to={`${path}${location.search}`}\n            >\n              {label}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","import React from \"react\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { CreateAlertNav } from \"../pages/CreateAlert/CreateAlertNav\";\nimport PropTypes from \"prop-types\";\n\nexport const CreateAlertLayout = ({ children }) => {\n  return (\n    <div>\n      <Wrapper>\n        <CreateAlertNav />\n        {children}\n      </Wrapper>\n    </div>\n  );\n};\n\nCreateAlertLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import React, { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { CreateAlertLayout } from \"../../layouts/CreateAlertLayout\";\nimport routes from \"../../../routes/createAlert.routes\";\nimport { Context } from \"../../../context/Store\";\nimport { joinColors } from \"../../../util/colorUtil\";\n\nconst CreateAlert = () => {\n  const [state] = useContext(Context);\n  const baseUrl = process.env.REACT_APP_DEPLOYED || \"\";\n\n  const params = new URLSearchParams({\n    colors: joinColors(state.palette),\n  });\n\n  const redirectPath = state.palette.length\n    ? `${baseUrl}/create/edit-alert?${params}`\n    : `${baseUrl}/create/palette`;\n  return (\n    <CreateAlertLayout>\n      <Switch>\n        {routes.map(({ path, component, label, exact }) => (\n          <Route key={label} path={path} exact={exact} component={component} />\n        ))}\n        <Route path={`${baseUrl}/create`}>\n          <Redirect to={redirectPath} />\n        </Route>\n      </Switch>\n    </CreateAlertLayout>\n  );\n};\n\nexport default CreateAlert;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const UserAlert = ({ user, alertName, textValues, css, dimensions }) => {\n  const { message, button } = textValues;\n  const {\n    alertBorderColor,\n    alertBackgroundColor,\n    buttonBorderColor,\n    buttonBackgroundColor,\n    textColor,\n    buttonTextColor,\n  } = css;\n\n  const {\n    alertHeight,\n    alertWidth,\n    alertBorderRadius,\n    alertBorderWidth,\n    alertXPadding,\n    alertYPadding,\n    buttonYPadding,\n    buttonXPadding,\n    buttonBorderWidth,\n    buttonBorderRadius,\n  } = dimensions;\n\n  const styles = {\n    backgroundColor: alertBackgroundColor,\n    border: `10px solid ${alertBorderColor}`,\n    color: textColor,\n    padding:\n      alertXPadding == alertYPadding\n        ? `${alertYPadding}rem`\n        : `${alertYPadding}rem ${alertXPadding}rem`,\n  };\n\n  const buttonStyles = {\n    backgroundColor: buttonBackgroundColor,\n    border: `${buttonBorderWidth}rem solid ${buttonBorderColor}`,\n    borderRadius: `${buttonBorderRadius}rem`,\n    color: buttonTextColor,\n  };\n\n  styles.width = `${alertWidth}rem`;\n  styles.height = `${alertHeight}rem`;\n  styles.borderRadius = `${alertBorderRadius}rem`;\n  styles.borderWidth = `${alertBorderWidth}rem`;\n\n  if (buttonXPadding == 15) {\n    buttonStyles.padding = `${buttonYPadding}rem 0`;\n    buttonStyles.width = \"100%\";\n  } else {\n    buttonStyles.padding = `${buttonYPadding}rem ${buttonXPadding}rem`;\n  }\n\n  return (\n    <article className=\"inline-block\">\n      <h2 className=\"prose prose-xl leading-snug text-rac-light-peach\">\n        {alertName}\n      </h2>\n      <p className=\"prose leading-tight text-white\">\n        Created by <span className=\"italic font-mono\">{user}</span>\n      </p>\n      <div className=\"flex flex-col items-center mt-1\" style={styles}>\n        <p>{message}</p>\n        <button\n          className=\"cursor-default mt-auto\"\n          disabled\n          aria-disabled=\"true\"\n          style={buttonStyles}\n        >\n          {button}\n        </button>\n      </div>\n    </article>\n  );\n};\n\nUserAlert.propTypes = {\n  user: PropTypes.string.isRequired,\n  alertName: PropTypes.string.isRequired,\n  textValues: PropTypes.exact({\n    message: PropTypes.string.isRequired,\n    button: PropTypes.string.isRequired,\n  }),\n  css: PropTypes.exact({\n    alertBorderColor: PropTypes.string.isRequired,\n    alertBackgroundColor: PropTypes.string.isRequired,\n    buttonBorderColor: PropTypes.string.isRequired,\n    buttonBackgroundColor: PropTypes.string.isRequired,\n    textColor: PropTypes.string.isRequired,\n    buttonTextColor: PropTypes.string.isRequired,\n  }),\n  dimensions: PropTypes.exact({\n    alertHeight: PropTypes.number.isRequired,\n    alertWidth: PropTypes.number.isRequired,\n    alertBorderRadius: PropTypes.number.isRequired,\n    alertBorderWidth: PropTypes.number.isRequired,\n    alertXPadding: PropTypes.number.isRequired,\n    alertYPadding: PropTypes.number.isRequired,\n    buttonXPadding: PropTypes.number.isRequired,\n    buttonYPadding: PropTypes.number.isRequired,\n    buttonBorderRadius: PropTypes.number.isRequired,\n    buttonBorderWidth: PropTypes.number.isRequired,\n  }),\n};\n","import React, { useEffect, useState } from \"react\";\nimport { alertDao } from \"../../../context/persistentContext\";\nimport { UserAlert } from \"../../components/UserAlert\";\nimport { Wrapper } from \"../../components/Wrapper\";\n\nconst UserAlerts = () => {\n  const [alerts, setAlerts] = useState([]);\n\n  const getAlerts = async () => {\n    const response = await alertDao.getAlerts();\n    setAlerts(response.data.result);\n  };\n\n  useEffect(() => {\n    getAlerts();\n  }, []);\n\n  return (\n    <div className=\"bg-rac-purple py-10\">\n      <Wrapper>\n        <section className=\"flex flex-wrap gap-x-8 gap-y-6 justify-evenly\">\n          {alerts.map((alert) => (\n            <UserAlert key={alert._id} {...alert} />\n          ))}\n        </section>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default UserAlerts;\n","import { CreateAlert, UserAlerts } from \"../views/pages/\";\n\nconst baseUrl = process.env.REACT_APP_DEPLOYED || \"\";\n\nconst routes = [\n  {\n    path: `${baseUrl}/alerts`,\n    component: UserAlerts,\n    label: \"User Alerts\",\n    exact: true,\n  },\n  {\n    path: `${baseUrl}/create`,\n    component: CreateAlert,\n    label: \"Create Alert\",\n  },\n];\n\nexport default routes;\n","import React from \"react\";\n\nexport const Footer = () => {\n  return (\n    <div className=\"prose prose-rac-green max-w-none\">\n      <p className=\"text-right py-2.5 text-white\">\n        Made by{\" \"}\n        <a\n          className=\"hover:text-rac-blue transition-colors rac-transition\"\n          href=\"https://twitter.com/celestellerby\"\n        >\n          Celeste Ellerby\n        </a>\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../../routes/routes\";\n\nexport const Nav = () => {\n  return (\n    <nav>\n      <ul className=\"flex gap-2\">\n        {routes.map(({ path, label }) => (\n          <li key={label}>\n            <NavLink\n              activeClassName=\"border-t-2 border-rac-yellow bg-rac-purple font-medium\"\n              className=\"prose prose-lg px-4 py-1 rounded hover:text-rac-yellow focus:text-rac-light-peach focus:outline-white text-white\"\n              to={path}\n            >\n              {label}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","import React from \"react\";\nimport { Footer } from \"../components/Footer\";\nimport { Nav } from \"../components/Nav\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport const GlobalLayout = ({ children }) => {\n  const baseUrl = process.env.REACT_APP_DEPLOYED || \"\";\n\n  return (\n    <div className=\"min-h-screen bg-rac-dark-purple flex flex-col text-white\">\n      <Wrapper>\n        <header className=\"flex justify-between items-baseline py-2\">\n          <Link className=\"group\" to={`${baseUrl}/`}>\n            <h1 className=\"text-white group-hover:text-rac-yellow prose prose-2xl font-semibold transition-colors rac-transition\">\n              react-alert-css\n            </h1>\n          </Link>\n          <Nav />\n        </header>\n      </Wrapper>\n      <main className=\"flex-grow\">{children}</main>\n      <Wrapper>\n        <Footer />\n      </Wrapper>\n    </div>\n  );\n};\n\nGlobalLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { BrowserRouter, Redirect, Route } from \"react-router-dom\";\nimport Store from \"./context/Store\";\nimport routes from \"./routes/routes\";\nimport { GlobalLayout } from \"./views/layouts/GlobalLayout\";\n\nfunction App() {\n  const baseUrl = process.env.REACT_APP_DEPLOYED || \"\";\n  console.log({ baseUrl });\n  return (\n    <Store>\n      <BrowserRouter>\n        <DndProvider backend={HTML5Backend}>\n          <GlobalLayout>\n            <Route path={`${baseUrl}/`} exact>\n              <Redirect to={`${baseUrl}/create`} />\n            </Route>\n            {routes.map(({ path, component, label, exact }) => (\n              <Route\n                key={label}\n                path={path}\n                exact={exact}\n                component={component}\n              />\n            ))}\n          </GlobalLayout>\n        </DndProvider>\n      </BrowserRouter>\n    </Store>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}